{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/lib/parser/tokenizer.ts"],"sourcesContent":["export type Token = \r\n  | { type: \"identifier\"; value: string }\r\n  | { type: \"symbol\"; value: string }\r\n  | { type: \"eof\" };\r\n\r\n  export function tokenize(input: string): Token[] {\r\n    const tokens: Token[] = [];\r\n    const regex = /\\s*([A-Za-z_][A-Za-z0-9_]*|[¬∧∨→↔∃∀(),])/g;\r\n    let match: RegExpExecArray | null;\r\n  \r\n    while ((match = regex.exec(input)) !== null) {\r\n      const token = match[1].trim();\r\n      if (!token) continue;\r\n  \r\n      if (/^[A-Za-z_][A-Za-z0-9_]*$/.test(token)) {\r\n        tokens.push({ type: \"identifier\", value: token });\r\n      } else {\r\n        tokens.push({ type: \"symbol\", value: token });\r\n      }\r\n    }\r\n  \r\n    tokens.push({ type: \"eof\" });\r\n    return tokens;\r\n  }\r\n  "],"names":[],"mappings":";;;AAKS,SAAS,SAAS,KAAa;IACpC,MAAM,SAAkB,EAAE;IAC1B,MAAM,QAAQ;IACd,IAAI;IAEJ,MAAO,CAAC,QAAQ,MAAM,IAAI,CAAC,MAAM,MAAM,KAAM;QAC3C,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,IAAI;QAC3B,IAAI,CAAC,OAAO;QAEZ,IAAI,2BAA2B,IAAI,CAAC,QAAQ;YAC1C,OAAO,IAAI,CAAC;gBAAE,MAAM;gBAAc,OAAO;YAAM;QACjD,OAAO;YACL,OAAO,IAAI,CAAC;gBAAE,MAAM;gBAAU,OAAO;YAAM;QAC7C;IACF;IAEA,OAAO,IAAI,CAAC;QAAE,MAAM;IAAM;IAC1B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/lib/parser/parser.ts"],"sourcesContent":["// app/lib/parser/parser.ts\r\n\r\nimport { Token } from \"./tokenizer\";\r\nimport { Formula, Predicate, Term } from \"frontend/app/lib/logic/logic\";\r\n\r\nexport class Parser {\r\n  private tokens: Token[];\r\n  private pos = 0;\r\n\r\n  constructor(tokens: Token[]) {\r\n    this.tokens = tokens;\r\n  }\r\n\r\n  private current(): Token {\r\n    return this.tokens[this.pos];\r\n  }\r\n\r\n  private advance(): void {\r\n    this.pos++;\r\n  }\r\n\r\n  private matchSymbol(sym: string): boolean {\r\n    const token = this.current();\r\n    if (token.type === \"symbol\" && token.value === sym) {\r\n      this.advance();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private expectSymbol(sym: string): void {\r\n    if (!this.matchSymbol(sym)) {\r\n      throw new Error(`Expected symbol '${sym}', got '${this.current().type === \"symbol\" ? this.current().value : this.current().type}'`);\r\n    }\r\n  }\r\n\r\n  public expectEOF(): void {\r\n    if (this.current().type !== \"eof\") {\r\n      throw new Error(\"Unexpected input after formula\");\r\n    }\r\n  }\r\n\r\n  public parseFormula(): Formula {\r\n    return this.parseIff();\r\n  }\r\n\r\n  // === Operator precedence ===\r\n\r\n  private parseIff(): Formula {\r\n    let left = this.parseImplies();\r\n    while (this.matchSymbol(\"↔\")) {\r\n      const right = this.parseImplies();\r\n      left = { type: \"iff\", left, right };\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private parseImplies(): Formula {\r\n    let left = this.parseOr();\r\n    while (this.matchSymbol(\"→\")) {\r\n      const right = this.parseOr();\r\n      left = { type: \"implies\", left, right };\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private parseOr(): Formula {\r\n    let left = this.parseAnd();\r\n    while (this.matchSymbol(\"∨\")) {\r\n      const right = this.parseAnd();\r\n      left = { type: \"or\", left, right };\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private parseAnd(): Formula {\r\n    let left = this.parseUnary();\r\n    while (this.matchSymbol(\"∧\")) {\r\n      const right = this.parseUnary();\r\n      left = { type: \"and\", left, right };\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private parseUnary(): Formula {\r\n    if (this.matchSymbol(\"¬\")) {\r\n      const operand = this.parseUnary();\r\n      return { type: \"not\", operand };\r\n    }\r\n    return this.parseQuantifier();\r\n  }\r\n\r\n  private parsePrimary(): Formula {\r\n    const token = this.current();\r\n\r\n    if (token.type === \"symbol\" && token.value === \"(\") {\r\n      this.advance();\r\n      const inner = this.parseFormula();\r\n      this.expectSymbol(\")\");\r\n      return inner;\r\n    }\r\n\r\n    if (token.type === \"identifier\") {\r\n      return this.parsePredicate();\r\n    }\r\n\r\n    throw new Error(`Unexpected token: ${JSON.stringify(token)}`);\r\n  }\r\n\r\n  private parsePredicate(): Predicate {\r\n    const nameToken = this.current();\r\n    if (nameToken.type !== \"identifier\") {\r\n      throw new Error(\"Expected predicate name\");\r\n    }\r\n    const name = nameToken.value;\r\n    this.advance();\r\n\r\n    const args: Term[] = [];\r\n\r\n    if (this.matchSymbol(\"(\")) {\r\n      if (!this.matchSymbol(\")\")) {\r\n        do {\r\n          const argToken = this.current();\r\n          if (argToken.type !== \"identifier\") {\r\n            throw new Error(\"Expected term identifier\");\r\n          }\r\n          const argName = argToken.value;\r\n          this.advance();\r\n\r\n          const isVariable = /^[a-z]$/.test(argName);\r\n          const term: Term = isVariable\r\n            ? { type: \"variable\", name: argName }\r\n            : { type: \"constant\", name: argName };\r\n\r\n          args.push(term);\r\n        } while (this.matchSymbol(\",\"));\r\n\r\n        this.expectSymbol(\")\");\r\n      }\r\n    }\r\n\r\n    return { type: \"predicate\", name, args };\r\n  }\r\n\r\n  private parseQuantifier(): Formula {\r\n    const token = this.current();\r\n  \r\n    let quantifierType: \"forall\" | \"exists\" | null = null;\r\n  \r\n    if (token.type === \"symbol\" && token.value === \"∀\") {\r\n      quantifierType = \"forall\";\r\n    } else if (token.type === \"symbol\" && token.value === \"∃\") {\r\n      quantifierType = \"exists\";\r\n    }\r\n  \r\n    if (!quantifierType) {\r\n      return this.parsePrimary(); // defer to next rule\r\n    }\r\n  \r\n    this.advance(); // consume ∀ or ∃\r\n  \r\n    const varToken = this.current();\r\n    if ((varToken.type !== \"identifier\" || !/^[a-z]$/.test(varToken.value))) {\r\n      throw new Error(`Expected variable name after '${token.value}'`);\r\n    }\r\n  \r\n    this.advance(); // consume variable name\r\n  \r\n    const body = this.parseFormula(); // not parseUnary — we allow full formulas here\r\n  \r\n    return {\r\n      type: quantifierType,\r\n      variable: { type: \"variable\", name: varToken.value },\r\n      body: body,\r\n    };\r\n  }  \r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/lib/parser/index.ts"],"sourcesContent":["import { Formula } from \"frontend/app/lib/logic/logic\";\r\nimport { ParsedFormula } from \"frontend/app/lib/logic/proof\";\r\nimport { tokenize } from \"./tokenizer\";\r\nimport { Parser } from \"./parser\";\r\n\r\nexport function parseFormulaInput(raw: string): ParsedFormula {\r\n  if (raw.trim() === \"\") {\r\n    return {\r\n      status: \"empty\"\r\n    }\r\n  }\r\n\r\n  try {\r\n    const formula = parseFormula(raw);\r\n    return { status: \"ok\", formula };\r\n  } catch (err: unknown) {\r\n    return { status: \"error\", error: getErrorMessage(err) };\r\n  }\r\n}\r\n\r\nfunction parseFormula(input: string): Formula {\r\n  const tokens = tokenize(input);\r\n  const parser = new Parser(tokens);\r\n  const formula = parser.parseFormula();\r\n  parser.expectEOF();\r\n  return formula;\r\n}\r\n\r\nfunction getErrorMessage(err: unknown): string {\r\n  if (err instanceof Error) return err.message;\r\n  return String(err);\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AACA;;;AAEO,SAAS,kBAAkB,GAAW;IAC3C,IAAI,IAAI,IAAI,OAAO,IAAI;QACrB,OAAO;YACL,QAAQ;QACV;IACF;IAEA,IAAI;QACF,MAAM,UAAU,aAAa;QAC7B,OAAO;YAAE,QAAQ;YAAM;QAAQ;IACjC,EAAE,OAAO,KAAc;QACrB,OAAO;YAAE,QAAQ;YAAS,OAAO,gBAAgB;QAAK;IACxD;AACF;AAEA,SAAS,aAAa,KAAa;IACjC,MAAM,SAAS,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD,EAAE;IACxB,MAAM,SAAS,IAAI,8HAAA,CAAA,SAAM,CAAC;IAC1B,MAAM,UAAU,OAAO,YAAY;IACnC,OAAO,SAAS;IAChB,OAAO;AACT;AAEA,SAAS,gBAAgB,GAAY;IACnC,IAAI,eAAe,OAAO,OAAO,IAAI,OAAO;IAC5C,OAAO,OAAO;AAChB","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/lib/logic/rules/index.ts"],"sourcesContent":["export const rules = [\r\n    \"∧Elim\",\r\n    \"∨Elim\",\r\n    \"¬Elim\",\r\n    \"⊥Elim\",\r\n    \"→Elim\",\r\n    \"↔Elim\",\r\n    \"∀Elim\",\r\n    \"∃Elim\",\r\n    \"∧Intro\",\r\n    \"∨Intro\",\r\n    \"¬Intro\",\r\n    \"⊥Intro\",\r\n    \"→Intro\",\r\n    \"↔Intro\",\r\n    \"∀Intro\",\r\n    \"∃Intro\",\r\n    \"P-Ind\",\r\n    \"S-Ind\"\r\n]\r\n"],"names":[],"mappings":";;;AAAO,MAAM,QAAQ;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/components/StatementEditor.tsx"],"sourcesContent":["import { parseFormulaInput } from \"@lib/parser\";\r\nimport { Statement } from \"@lib/logic/proof\";\r\nimport { rules } from \"@lib/logic/rules\";\r\n\r\ntype StatementEditorProps = {\r\n  statement: Statement;\r\n  onChange: (updated: Statement) => void;\r\n  deleteStatement: () => void;\r\n};\r\n\r\nexport default function StatementEditor({\r\n  statement,\r\n  onChange,\r\n  deleteStatement,\r\n}: StatementEditorProps) {\r\n  const handleChange = (raw: string) => {\r\n    const result = parseFormulaInput(raw);\r\n    onChange({ ...statement, raw, result });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-row w-full h-full\">\r\n      <div className=\"h-full p-1 text-lg\">{statement.number}</div>\r\n      <input\r\n        value={statement.raw}\r\n        onChange={(e) => handleChange(e.target.value)}\r\n        className=\"border px-2 py-1 rounded w-full\"\r\n        placeholder=\"Statement\"\r\n      />\r\n      <select\r\n        value={statement.rule}\r\n        onChange={(e) => onChange({ ...statement, rule: e.target.value })}\r\n        className=\"border px-2 py-1 rounded ml-2\"\r\n      >\r\n        {rules.map((rule) => (\r\n          <option key={\"statment-rule-\" + rule} value={rule}>\r\n            {rule}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"ml-2 border px-2 py-1 rounded bg-base hover-bg-dark-base text-white\"\r\n        onClick={deleteStatement}\r\n      >\r\n        Delete\r\n      </button>\r\n\r\n      {statement.result.status === \"error\" && (\r\n        <p className=\"text-red-600 text-sm mt-1\">{statement.result.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAQe,SAAS,gBAAgB,EACtC,SAAS,EACT,QAAQ,EACR,eAAe,EACM;IACrB,MAAM,eAAe,CAAC;QACpB,MAAM,SAAS,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;QACjC,SAAS;YAAE,GAAG,SAAS;YAAE;YAAK;QAAO;IACvC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BAAsB,UAAU,MAAM;;;;;;0BACrD,8OAAC;gBACC,OAAO,UAAU,GAAG;gBACpB,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gBAC5C,WAAU;gBACV,aAAY;;;;;;0BAEd,8OAAC;gBACC,OAAO,UAAU,IAAI;gBACrB,UAAU,CAAC,IAAM,SAAS;wBAAE,GAAG,SAAS;wBAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oBAAC;gBAC/D,WAAU;0BAET,qIAAA,CAAA,QAAK,CAAC,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAqC,OAAO;kCAC1C;uBADU,mBAAmB;;;;;;;;;;0BAKpC,8OAAC;gBACC,WAAU;gBACV,SAAS;0BACV;;;;;;YAIA,UAAU,MAAM,CAAC,MAAM,KAAK,yBAC3B,8OAAC;gBAAE,WAAU;0BAA6B,UAAU,MAAM,CAAC,KAAK;;;;;;;;;;;;AAIxE","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/components/SubproofEditor.tsx"],"sourcesContent":["\"use client\";\r\nimport { Statement, Subproof, Step } from \"@lib/logic/proof\";\r\nimport { parseFormulaInput } from \"@lib/parser\";\r\nimport { useState } from \"react\";\r\nimport StepEditor from \"./StepEditor\";\r\nimport StatementEditor from \"./StatementEditor\";\r\nimport { text } from \"stream/consumers\";\r\n\r\ntype SubproofEditorProps = {\r\n  subproof: Subproof;\r\n  onChange: (updated: Subproof) => void;\r\n  deleteSubproof: () => void;\r\n};\r\n\r\nexport default function SubproofEditor({\r\n  subproof,\r\n  onChange,\r\n  deleteSubproof,\r\n  \r\n}: SubproofEditorProps) {\r\n  const updateStepAt = (index: number, updated: Step) => {\r\n    const newSteps = [...subproof.steps];\r\n    newSteps[index] = updated;\r\n    onChange({ ...subproof, steps: newSteps });\r\n  };\r\n\r\n  const addStep = () => {\r\n    onChange({\r\n      ...subproof,\r\n      steps: [\r\n        ...subproof.steps,\r\n        {\r\n          type: \"line\",\r\n          raw: \"\",\r\n          result: parseFormulaInput(\"\"),\r\n          rule: \"∧Elim\",\r\n          parents: [],\r\n          number: subproof.steps.length + 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const addSubproof = () => {\r\n    onChange({\r\n      ...subproof,\r\n      steps: [\r\n        ...subproof.steps,\r\n        {\r\n          type: \"subproof\",\r\n          premise: {\r\n            type: \"line\",\r\n            raw: \"\",\r\n            result: parseFormulaInput(\"\"),\r\n            rule: \"none\",\r\n            parents: [],\r\n            number: subproof.steps.length + 1,\r\n          },\r\n          steps: [],\r\n          constants: [],\r\n          number: subproof.steps.length + 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const onChangePremise = (text: string) => {\r\n    const updatedPremise = {\r\n      ...subproof.premise,\r\n      raw: text,\r\n      result: parseFormulaInput(text),\r\n    };\r\n    onChange({ ...subproof, premise: updatedPremise });\r\n  };\r\n\r\n  const deleteStep = (index: number) => {\r\n    const newSteps = [...subproof.steps];\r\n    newSteps.splice(index, 1);\r\n    onChange({ ...subproof, steps: newSteps });\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col gap-2 pl-4 sub relative\">\r\n      <div className=\"flex flex-row w-full h-full mb-2\">\r\n        <div className=\"h-full p-1 text-lg\">{subproof.number}</div>\r\n        <input\r\n          type=\"text\"\r\n          value={subproof.premise.raw}\r\n          onChange={(e) => onChangePremise(e.target.value)}\r\n          className=\"px-2 py-1 rounded w-full sub-premise\"\r\n          placeholder=\"Subproof Premise\"\r\n        />\r\n        <button\r\n          className=\"ml-2 border px-2 py-1 rounded bg-base hover-bg-dark-base text-white\"\r\n          onClick={deleteSubproof}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      {subproof.steps.map((step, i) => (\r\n        <StepEditor\r\n          key={\"step-\" + i}\r\n          step={step}\r\n          updateStep={(updated) => updateStepAt(i, updated)}\r\n          deleteStep={() => deleteStep(i)}\r\n        />\r\n      ))}\r\n      <div className=\"flex gap-4\">\r\n        <button onClick={addStep} className=\"mt-2 text-sm text-blue-600\">\r\n          + Add Step\r\n        </button>\r\n        <button onClick={addSubproof} className=\"mt-2 text-sm text-blue-600\">\r\n          + Add Subproof\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAce,SAAS,eAAe,EACrC,QAAQ,EACR,QAAQ,EACR,cAAc,EAEM;IACpB,MAAM,eAAe,CAAC,OAAe;QACnC,MAAM,WAAW;eAAI,SAAS,KAAK;SAAC;QACpC,QAAQ,CAAC,MAAM,GAAG;QAClB,SAAS;YAAE,GAAG,QAAQ;YAAE,OAAO;QAAS;IAC1C;IAEA,MAAM,UAAU;QACd,SAAS;YACP,GAAG,QAAQ;YACX,OAAO;mBACF,SAAS,KAAK;gBACjB;oBACE,MAAM;oBACN,KAAK;oBACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;oBAC1B,MAAM;oBACN,SAAS,EAAE;oBACX,QAAQ,SAAS,KAAK,CAAC,MAAM,GAAG;gBAClC;aACD;QACH;IACF;IAEA,MAAM,cAAc;QAClB,SAAS;YACP,GAAG,QAAQ;YACX,OAAO;mBACF,SAAS,KAAK;gBACjB;oBACE,MAAM;oBACN,SAAS;wBACP,MAAM;wBACN,KAAK;wBACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;wBAC1B,MAAM;wBACN,SAAS,EAAE;wBACX,QAAQ,SAAS,KAAK,CAAC,MAAM,GAAG;oBAClC;oBACA,OAAO,EAAE;oBACT,WAAW,EAAE;oBACb,QAAQ,SAAS,KAAK,CAAC,MAAM,GAAG;gBAClC;aACD;QACH;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,iBAAiB;YACrB,GAAG,SAAS,OAAO;YACnB,KAAK;YACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;QAC5B;QACA,SAAS;YAAE,GAAG,QAAQ;YAAE,SAAS;QAAe;IAClD;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,WAAW;eAAI,SAAS,KAAK;SAAC;QACpC,SAAS,MAAM,CAAC,OAAO;QACvB,SAAS;YAAE,GAAG,QAAQ;YAAE,OAAO;QAAS;IAC1C;IACA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAsB,SAAS,MAAM;;;;;;kCACpD,8OAAC;wBACC,MAAK;wBACL,OAAO,SAAS,OAAO,CAAC,GAAG;wBAC3B,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;wBAC/C,WAAU;wBACV,aAAY;;;;;;kCAEd,8OAAC;wBACC,WAAU;wBACV,SAAS;kCACV;;;;;;;;;;;;YAIF,SAAS,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,kBACzB,8OAAC,gIAAA,CAAA,UAAU;oBAET,MAAM;oBACN,YAAY,CAAC,UAAY,aAAa,GAAG;oBACzC,YAAY,IAAM,WAAW;mBAHxB,UAAU;;;;;0BAMnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,SAAS;wBAAS,WAAU;kCAA6B;;;;;;kCAGjE,8OAAC;wBAAO,SAAS;wBAAa,WAAU;kCAA6B;;;;;;;;;;;;;;;;;;AAM7E","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/components/StepEditor.tsx"],"sourcesContent":["import { Step } from \"@lib/logic/proof\";\r\nimport StatementEditor from \"@components/StatementEditor\";\r\nimport SubproofEditor from \"./SubproofEditor\";\r\n\r\ntype StepEditorProps = {\r\n  step: Step;\r\n  updateStep: (updated: Step) => void;\r\n  deleteStep: () => void;\r\n};\r\n\r\nexport default function StepEditor({ step, updateStep, deleteStep }: StepEditorProps) {\r\n  if (step.type === \"line\") {\r\n    return (\r\n      <StatementEditor\r\n        statement={step}\r\n        onChange={(updated) => updateStep(updated)}\r\n        deleteStatement={deleteStep}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <SubproofEditor\r\n        subproof={step}\r\n        onChange={updateStep}\r\n        deleteSubproof={deleteStep}\r\n        \r\n      />\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAQe,SAAS,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAmB;IAClF,IAAI,KAAK,IAAI,KAAK,QAAQ;QACxB,qBACE,8OAAC,qIAAA,CAAA,UAAe;YACd,WAAW;YACX,UAAU,CAAC,UAAY,WAAW;YAClC,iBAAiB;;;;;;IAGvB,OAAO;QACL,qBACE,8OAAC,oIAAA,CAAA,UAAc;YACb,UAAU;YACV,UAAU;YACV,gBAAgB;;;;;;IAItB;AACF","debugId":null}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/lib/logic/substitutions.ts"],"sourcesContent":["// Define mappings from shortcuts to symbols\r\nconst shortcuts: { [key: string]: string } = {\r\n    '~': '¬',      // Logical negation\r\n    '@': '∀',      // Logical forAll\r\n    '#': '≠',      // Logical not equals\r\n    '$': '→',      // Logical implication\r\n    '%': '↔',      // Logical biconditional\r\n    '^': '⊥',      // Logical false\r\n    '&': '∧',      // Logical AND\r\n    '_': '⊆',      // Logical subset\r\n    '|': '∨',       // Logical OR\r\n    '/': '∃',      // Logical exists\r\n}\r\n\r\n// Build a regex pattern that escapes any special characters in keys\r\nconst pattern: string = Object.keys(shortcuts)\r\n    .map(k => k.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'))\r\n    .join('|');\r\nconst regex = new RegExp(pattern, 'g');\r\n\r\nexport const replaceSubstitutions = (text: string) => {\r\n    console.log(text);\r\n    return text.replace(regex, (match) => shortcuts[match])\r\n};"],"names":[],"mappings":"AAAA,4CAA4C;;;;AAC5C,MAAM,YAAuC;IACzC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACT;AAEA,oEAAoE;AACpE,MAAM,UAAkB,OAAO,IAAI,CAAC,WAC/B,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,CAAC,4BAA4B,SAC/C,IAAI,CAAC;AACV,MAAM,QAAQ,IAAI,OAAO,SAAS;AAE3B,MAAM,uBAAuB,CAAC;IACjC,QAAQ,GAAG,CAAC;IACZ,OAAO,KAAK,OAAO,CAAC,OAAO,CAAC,QAAU,SAAS,CAAC,MAAM;AAC1D","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/components/ProofEditor.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Proof, Step } from \"@lib/logic/proof\";\r\nimport StepEditor from \"@components/StepEditor\";\r\nimport { replaceSubstitutions } from \"@lib/logic/substitutions\";\r\nimport { parseFormulaInput } from \"@lib/parser\";\r\n\r\ntype ProofEditorProps = {\r\n  proof: Proof;\r\n  setProof: (proof: Proof) => void;\r\n};\r\n\r\nexport default function ProofEditor({ proof, setProof }: ProofEditorProps) {\r\n  const updatePremise = (index: number, raw: string) => {\r\n    const newPremises = [...proof.premises];\r\n    newPremises[index] = {\r\n      type: \"line\",\r\n      raw,\r\n      result: parseFormulaInput(raw),\r\n      rule: \"none\",\r\n      parents: [],\r\n      number: proof.premises[index].number,\r\n    };\r\n    setProof({ ...proof, premises: newPremises });\r\n  };\r\n\r\n  const addPremise = () => {\r\n    setProof({\r\n      ...proof,\r\n      premises: [\r\n        ...proof.premises,\r\n        {\r\n          type: \"line\",\r\n          raw: \"\",\r\n          result: parseFormulaInput(\"\"),\r\n          rule: \"none\",\r\n          parents: [],\r\n          number: proof.premises.length + 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const updateStepAt = (index: number, updated: Step) => {\r\n    const newSteps = [...proof.steps];\r\n    newSteps[index] = updated;\r\n    setProof({ ...proof, steps: newSteps });\r\n  };\r\n\r\n  const addStep = () => {\r\n    setProof({\r\n      ...proof,\r\n      steps: [\r\n        ...proof.steps,\r\n        {\r\n          type: \"line\",\r\n          raw: \"\",\r\n          result: parseFormulaInput(\"\"),\r\n          rule: \"∧Elim\",\r\n          parents: [],\r\n          number: proof.steps.length + 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const addSubproof = () => {\r\n    setProof({\r\n      ...proof,\r\n      steps: [\r\n        ...proof.steps,\r\n        {\r\n          type: \"subproof\",\r\n          premise: {\r\n            type: \"line\",\r\n            raw: \"\",\r\n            result: parseFormulaInput(\"\"),\r\n            rule: \"none\",\r\n            parents: [],\r\n            number: proof.steps.length + 1,\r\n          },\r\n          steps: [],\r\n          constants: [],\r\n          number: proof.steps.length + 1,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const deleteStep = (index: number) => {\r\n    const newSteps = [...proof.steps];\r\n    newSteps.splice(index, 1);\r\n    setProof({ ...proof, steps: newSteps });\r\n  };\r\n\r\n  // add the substutions to the proof\r\n  useEffect (() => {\r\n    let changed = false\r\n    const oldPremises = proof.premises\r\n    for(const premise of oldPremises) {\r\n      const oldRaw = premise.raw\r\n      premise.raw = replaceSubstitutions(premise.raw)\r\n      if(oldRaw !== premise.raw) {\r\n        changed = true\r\n      }\r\n    }\r\n\r\n    const oldSteps = proof.steps\r\n    for(const step of oldSteps) {\r\n      if(step.type === \"line\") {\r\n        const oldRaw = step.raw\r\n        step.raw = replaceSubstitutions(step.raw)\r\n        if(oldRaw !== step.raw) {\r\n          changed = true\r\n        }\r\n      }\r\n    }\r\n\r\n    if(changed) {\r\n      setProof({...proof})\r\n    }\r\n    \r\n  }, [proof, setProof])\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-6\">\r\n      <div>\r\n        <h3 className=\"font-semibold mb-2\">Premises</h3>\r\n        <div className=\"flex flex-col gap-2\">\r\n          {proof.premises.map((p, i) => (\r\n            <input\r\n              key={i}\r\n              value={p.raw}\r\n              onChange={(e) => updatePremise(i, e.target.value)}\r\n              className=\"border px-2 py-1 rounded w-full\"\r\n              placeholder={`Premise ${i + 1}`}\r\n            />\r\n          ))}\r\n          <button onClick={addPremise} className=\"mt-2 text-sm text-blue-600\">\r\n            + Add Premise\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"font-semibold mb-2\">Steps</h3>\r\n        <div className=\"flex flex-col gap-2\">\r\n          {proof.steps.map((step, i) => (\r\n            <StepEditor\r\n              key={i}\r\n              step={step}\r\n              updateStep={(updated) => updateStepAt(i, updated)}\r\n              deleteStep={() => deleteStep(i)}\r\n            />\r\n          ))}\r\n          <div className=\"flex gap-4 mt-2\">\r\n            <button onClick={addStep} className=\"mt-2 text-sm text-blue-600\">\r\n              + Add Step\r\n            </button>\r\n            <button onClick={addSubproof} className=\"mt-2 text-sm text-blue-600\">\r\n              + Add Subproof\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <p>\r\n        TODO: Add the goals & conclusion at the bottom. I put it in the proof type. See the\r\n        other TODO that shows up when you click Add subproof.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AANA;;;;;;AAae,SAAS,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAoB;IACvE,MAAM,gBAAgB,CAAC,OAAe;QACpC,MAAM,cAAc;eAAI,MAAM,QAAQ;SAAC;QACvC,WAAW,CAAC,MAAM,GAAG;YACnB,MAAM;YACN;YACA,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;YAC1B,MAAM;YACN,SAAS,EAAE;YACX,QAAQ,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAM;QACtC;QACA,SAAS;YAAE,GAAG,KAAK;YAAE,UAAU;QAAY;IAC7C;IAEA,MAAM,aAAa;QACjB,SAAS;YACP,GAAG,KAAK;YACR,UAAU;mBACL,MAAM,QAAQ;gBACjB;oBACE,MAAM;oBACN,KAAK;oBACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;oBAC1B,MAAM;oBACN,SAAS,EAAE;oBACX,QAAQ,MAAM,QAAQ,CAAC,MAAM,GAAG;gBAClC;aACD;QACH;IACF;IAEA,MAAM,eAAe,CAAC,OAAe;QACnC,MAAM,WAAW;eAAI,MAAM,KAAK;SAAC;QACjC,QAAQ,CAAC,MAAM,GAAG;QAClB,SAAS;YAAE,GAAG,KAAK;YAAE,OAAO;QAAS;IACvC;IAEA,MAAM,UAAU;QACd,SAAS;YACP,GAAG,KAAK;YACR,OAAO;mBACF,MAAM,KAAK;gBACd;oBACE,MAAM;oBACN,KAAK;oBACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;oBAC1B,MAAM;oBACN,SAAS,EAAE;oBACX,QAAQ,MAAM,KAAK,CAAC,MAAM,GAAG;gBAC/B;aACD;QACH;IACF;IAEA,MAAM,cAAc;QAClB,SAAS;YACP,GAAG,KAAK;YACR,OAAO;mBACF,MAAM,KAAK;gBACd;oBACE,MAAM;oBACN,SAAS;wBACP,MAAM;wBACN,KAAK;wBACL,QAAQ,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD,EAAE;wBAC1B,MAAM;wBACN,SAAS,EAAE;wBACX,QAAQ,MAAM,KAAK,CAAC,MAAM,GAAG;oBAC/B;oBACA,OAAO,EAAE;oBACT,WAAW,EAAE;oBACb,QAAQ,MAAM,KAAK,CAAC,MAAM,GAAG;gBAC/B;aACD;QACH;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,WAAW;eAAI,MAAM,KAAK;SAAC;QACjC,SAAS,MAAM,CAAC,OAAO;QACvB,SAAS;YAAE,GAAG,KAAK;YAAE,OAAO;QAAS;IACvC;IAEA,mCAAmC;IACnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAG;QACT,IAAI,UAAU;QACd,MAAM,cAAc,MAAM,QAAQ;QAClC,KAAI,MAAM,WAAW,YAAa;YAChC,MAAM,SAAS,QAAQ,GAAG;YAC1B,QAAQ,GAAG,GAAG,CAAA,GAAA,oIAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ,GAAG;YAC9C,IAAG,WAAW,QAAQ,GAAG,EAAE;gBACzB,UAAU;YACZ;QACF;QAEA,MAAM,WAAW,MAAM,KAAK;QAC5B,KAAI,MAAM,QAAQ,SAAU;YAC1B,IAAG,KAAK,IAAI,KAAK,QAAQ;gBACvB,MAAM,SAAS,KAAK,GAAG;gBACvB,KAAK,GAAG,GAAG,CAAA,GAAA,oIAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,GAAG;gBACxC,IAAG,WAAW,KAAK,GAAG,EAAE;oBACtB,UAAU;gBACZ;YACF;QACF;QAEA,IAAG,SAAS;YACV,SAAS;gBAAC,GAAG,KAAK;YAAA;QACpB;IAEF,GAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBAAI,WAAU;;4BACZ,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,kBACtB,8OAAC;oCAEC,OAAO,EAAE,GAAG;oCACZ,UAAU,CAAC,IAAM,cAAc,GAAG,EAAE,MAAM,CAAC,KAAK;oCAChD,WAAU;oCACV,aAAa,CAAC,QAAQ,EAAE,IAAI,GAAG;mCAJ1B;;;;;0CAOT,8OAAC;gCAAO,SAAS;gCAAY,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;0BAMxE,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBAAI,WAAU;;4BACZ,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,kBACtB,8OAAC,gIAAA,CAAA,UAAU;oCAET,MAAM;oCACN,YAAY,CAAC,UAAY,aAAa,GAAG;oCACzC,YAAY,IAAM,WAAW;mCAHxB;;;;;0CAMT,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAO,SAAS;wCAAS,WAAU;kDAA6B;;;;;;kDAGjE,8OAAC;wCAAO,SAAS;wCAAa,WAAU;kDAA6B;;;;;;;;;;;;;;;;;;;;;;;;0BAO3E,8OAAC;0BAAE;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport ProofEditor from \"./components/ProofEditor\";\r\nimport { Proof } from \"./lib/logic/proof\";\r\n\r\nexport default function Home() {\r\n  const [proof, setProof] = useState<Proof>({\r\n    type: \"proof\",\r\n    premises: [],\r\n    steps: [],\r\n    goals: [],\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full min-h-screen\">\r\n      <section className=\"flex-1 border p-4 overflow-auto\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Proof</h2>\r\n        <ProofEditor proof={proof} setProof={setProof} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;QACxC,MAAM;QACN,UAAU,EAAE;QACZ,OAAO,EAAE;QACT,OAAO,EAAE;IACX;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAQ,WAAU;;8BACjB,8OAAC;oBAAG,WAAU;8BAAyB;;;;;;8BACvC,8OAAC,iIAAA,CAAA,UAAW;oBAAC,OAAO;oBAAO,UAAU;;;;;;;;;;;;;;;;;AAI7C","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 973, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Murray/Code/logicProject/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}